digraph "basic_json::diff"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="basic_json::diff",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="creates a diff as a JSON patch"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="basic_json::cbegin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a9ab2ece6530b3b2be5b876f80c68dc78",tooltip="returns a const iterator to the first element"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="basic_json::cend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a57c63700f006c54624eb2433ec6526b0",tooltip="returns an iterator to one past the last element"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="detail::concat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a266fb3d4bf633ad6c506434cc91164da",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="detail::concat_into",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a89f967b745cf8df11ba9d59f93d97753",tooltip=" "];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="detail::concat_length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#ac185140ed8c8fcc07a302a890b714b0d",tooltip=" "];
  Node1 -> Node1 [id="edge6_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="basic_json::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a4dbc83213b31a171aa8ba65ff00fa954",tooltip="returns an iterator to one past the last element"];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="detail::escape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#af2a9ce4740e0b45d33129e2c8e53a0a8",tooltip="string escaping as described in RFC 6901 (Sect. 4)"];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="detail::replace_substring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a6fd295e53b1dd4f46e235e6afee26d5e",tooltip="replace all occurrences of a substring by another string"];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="basic_json::find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a727e3cfb5a874314d8deb12cb53a8105",tooltip="find an element in a JSON object"];
  Node10 -> Node7 [id="edge11_Node000010_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node11 [id="edge12_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="basic_json::is_object",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#af355a2b131068acf3d623eb6d80a711c",tooltip="return whether value is an object"];
  Node1 -> Node12 [id="edge13_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="basic_json::object",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a50a0e8dacc0f4aa12162da666595e6fd",tooltip="explicitly create an object from an initializer list"];
  Node1 -> Node13 [id="edge14_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="basic_json::size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#a086cbfd1ad4ba83a8127c87467a92f47",tooltip="returns the number of elements"];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="basic_json::type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classbasic__json.html#ac5e52dbb3cb4e9fcabd1b88c37985aef",tooltip="return the type of the JSON value (explicit)"];
}
