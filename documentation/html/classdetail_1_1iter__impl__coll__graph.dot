digraph "detail::iter_impl&lt; BasicJsonType &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="detail::iter_impl\<\l BasicJsonType \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="a template for a bidirectional iterator for the basic_json class This class implements a both iterato..."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_it",fontcolor="grey" ];
  Node2 [id="Node000002",label="detail::internal_iterator\l\< typename std::remove\l_const\< BasicJsonType \>\l::type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structdetail_1_1internal__iterator.html",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" primitive_iterator",fontcolor="grey" ];
  Node3 [id="Node000003",label="detail::primitive_iterator_t",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classdetail_1_1primitive__iterator__t.html",tooltip=" "];
}
